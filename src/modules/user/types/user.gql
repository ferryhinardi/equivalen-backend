type User {
  id: ID!
  userStudent: UserStudent
  authProviders: [AuthProvider!]
  userSchools: [UserSchool!]
  userProfile: UserProfile

  isStudent: Boolean
  token: String

  gender: Gender
  username: String
  fullName: String
  email: String
  phoneNumber: String
  photoUrl: String
  placeBod: String
  dateBod: Date
  createdAt: Date
  updatedAt: Date
}

extend type Query {
  """
  Get User
  """
  user: User

  """
  Get list of users
  """
  users: [User!]
}

extend type Mutation {
  """
  Create Authenticated user as a student.
  """
  registerUserStudent(
    userProfile: UserProfileInput
    userSchool: UserSchoolInput
    userStudent: UserStudentInput
  ): User
}
