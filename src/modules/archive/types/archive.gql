type Archive {
  id: ID!
  name: String!
  minimumScore: Float
  totalQuestion: Int
  curriculum: Curriculum
  course: Course
  questionType: QuestionType
  evaluation: Evaluation
  packages: [Package]
  assignment: Assignment
  userArchives: [UserArchive]
  createdAt: Date
  createdBy: User
}

input ArchiveInput {
  id: ID
  name: String
  minimumScore: Float
  totalQuestion: Int
  curriculum: CurriculumInput
  questionType: QuestionTypeInput
  evaluation: EvaluationInput
  packages: [PackageInput]
}

extend type Query {
  archives(
    id: ID
    name: String
    minimumScore: Float
    curriculum: CurriculumInput
    questionType: QuestionTypeInput
    evaluation: EvaluationInput
    packages: [PackageInput]
    createdBy: UserInput
    limit: Int
    offset: Int
  ): [Archive]
  archive(id: ID): Archive
}

extend type Mutation {
  createArchive(archive: ArchiveInput): Archive
}